package InputStream.BufferedReader.Decorator;

public class Intro {
    /**
     * 节点流可以从一个特定的数据源读写数据，如FileReader,FileWriter
     *
     * 处理流（也叫包装流）是“连接”在已存在的流（节点流或处理流）之上，为程序提供更为强大的读写功能，也更加灵活，如BufferedReader,BufferedWriter
     * BufferedReader类中有属性Reader,即可以封装一个节点流，该节点流可以是任意的，只要是Reader的子类就可以
     *
     *
     *
     * 节点流和处理流的区别和联系
     * 节点流是底层流/低级流，直接和数据源相接
     * 处理流（也叫包装流）包装节点流，即可以消除不同节点流的差异，也可以提供更方便的方法来完成输入输出
     * 处理流（也叫包装流）堆节点流进行包装，使用了修饰器设计模式，不会直接与数据源相连
     *
     * 处理流的功能主要体现在以下两个方面
     * 性能的提高：主要以增加缓冲的方式来提高输入输出的效率
     * 操作的便捷：处理流可能提供了一系列便捷的方法来一次输入输出大批量的数据，使用更加灵活方便
     */
}
